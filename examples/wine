#!/bin/bash --

# This wine template uses its virtual desktop feature.

# The command is an array as some programs may take arguments, e.g.: foo.exe /S
command=()

# The prefix is the same as the WINEPREFIX, it will be exported.
prefix=${XDG_DATA_HOME:-$HOME/.local/share}/wine/foo

# The path to working directory for the executable.
# By default assume the prefix is the same, e.g. a prefix of 'foo' becomes to
# 'C:\foo'. If instead the command is under a different directory alter this
# variable, e.g. path=foo/x86 (becoming 'C:\foo\x86'):
path=

# Title and resolution passed to wine's Virtual Desktop:
title=no-spaces-allowed-here
resolution=1920x1080

# Export any environment variables, useful in some cases, e.g. for NVIDIA:
export __GL_THREADED_OPTIMIZATIONS=1

# Or for mesa, to disable vsync:
export vblank_mode=0

# Enable threaded gl dispatch for mesa:
export mesa_glthread=true

# From here on the rest is just script logic based on the above information.
export WINEPREFIX=$prefix

# Normally no arguments are given to launchers. However it is possible to
# directly invoke them with arguments which can be useful.
#
# For example './foo/run winecfg' with this template can be used to start
# winecfg in the correct WINEPREFIX instead of running the user defined
# command. A small convenience to avoid manually specifying WINEPREFIX.
if [[ $# -gt 0 ]]; then
    command=("$@")
fi

wineopts=(explorer /desktop="$title","$resolution")

if CDPATH='' cd -- "$prefix"/drive_c/"${path:-${prefix##*/}}"; then
    exec wine "${wineopts[@]}" "${command[@]}"
fi
